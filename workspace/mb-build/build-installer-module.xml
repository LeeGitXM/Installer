<!-- Create a sample application installer. Normally this would be created as
     a product of running the Master Builder. We use "Batch Expert+" as our example.
-->
<project name="InstallerModule" basedir="../" default="BuildAndInstallModule">

	<import file="${basedir}/mb-build/build.xml"/>

	<property name="version.build" value="0" />	
	<property name="version.beta" value="-development" />		
	<property name="MBModule.version" value="3.0.1.${version.build}" />
	<property name="MBModule.name" value="InstallerModule" />
	<property name="MBModule.release" value="0.1" />
	<property name="MBModule.description" value="Installer Module prototype" />
	<property name="jar.dir" value="${git.repo}/external/lib" />
	<property name="deploy.dir" value="${build.dir}/deploy" />
	<property name="ant.build.javac.source" value="1.8"/>
	<property name="ant.build.javac.target" value="1.8"/>
	

	<!-- Gateway jar classpath -->
	<path id="IM_Gateway.classpath">
		<path refid="ignition.classpath" />
		<path refid="external.classpath" />
	</path>	

	
	
	<!-- This target will build the toolkit module and deploy it to the local Ignition gateway -->
		<target name="BuildAndInstallModule" depends="clean, build, deploy" />

	<!-- Cleans all previously built files (leaves doc) -->
	<target name="clean" description="Remove existing build products" >
		<delete dir="${build.dir}/bin" />
		<delete dir="${build.dir}/release" />
		<delete dir="${build.dir}/temp_modl" />
		<delete dir="${deploy.dir}" />
	</target>	
	
	<!-- Builds the toolkit module jars and the final .modl file -->
	<target name="build" depends="clean" description="Compile the source">
		<echo message="${MBModule.name} ${MBModule.version}" />	
		<delete dir="${build.dir}/temp_modl" />	
		
		<!-- build.date and version.build are both defined in build.xml -->
		<echo message="Build date: ${build.date}" />
		<echo message="Build version: ${version.build}" />	
				
		<!-- InstallerModule Gateway jar -->
		<antcall target="MakeProject">
			<param name="modName" value="${MBModule.name}_Gateway" />
			<param name="sourceDirFolder" value="InstallerModule-gateway" />
			<param name="jarName" value="InstallerModule-gateway" />
			<param name="javacSource" value="1.8" />
			<param name="module.build.classpath" value="IM_Gateway.classpath"/>
		</antcall>

		
		
		<!-- Create .modl file -->
		<echo message="Making ${MBModule.name} modl" />
		<mkdir dir="${build.dir}/temp_modl" />
		<mkdir dir="${build.dir}/modules" />
		

		<copy file="${build.dir}/installer-module-module.xml" tofile="${build.dir}/temp_modl/module.xml" overwrite="true" />

		<replace file="${build.dir}/temp_modl/module.xml" token="@NAME@" value="${MBModule.name}" />
		<replace file="${build.dir}/temp_modl/module.xml" token="@DESCRIPTION@" value="${MBModule.description}" />
		<replace file="${build.dir}/temp_modl/module.xml" token="@VERSION@" value="${MBModule.version}" />

		
		<!-- Copy gateway jar -->
		<copy file="${build.dir}/bin/${MBModule.name}_Gateway/dist/InstallerModule-gateway.jar" todir="${build.dir}/temp_modl/" />
		

		<!-- Copy license file and javadoc into the bundle -->
		<mkdir dir="${build.dir}/doc" />
		<copy file="${build.dir}/license.html" todir="${build.dir}/temp_modl/" />
		<copy todir="${build.dir}/temp_modl/doc">
		    <fileset dir="${build.dir}/doc"/>
		</copy>
		<!-- Echo the version into .version in the bundle and to be saved -->
		<echo message="${MBModule.name}-${MBModule.version}:${MBModule.release}" file="${build.dir}/temp_modl/.version" append="false"/>
		<echo message="${MBModule.name}-${MBModule.name}:${MBModule.release}" file="${build.dir}/.version" append="false"/>
		<!-- Create and copy a .module-installer marker into the module -->
		<echo message="${MBModule.name}-${MBModule.version}:${MBModule.release}" file="${build.dir}/temp_modl/.installer-module" append="false"/>
		<echo message="${MBModule.name}-${MBModule.name}:${MBModule.release}" file="${build.dir}/.installer-module" append="false"/>

		
		<!-- Zip it all up -->
		<zip zipfile="${build.dir}/modules/${MBModule.name}-module-unsigned.modl" basedir="${build.dir}/temp_modl" />
	</target>
	<!-- Installs TF module in local Ignition gateway. Note that the gateway must be running in developer mode for this to succeed. -->
	<target name="deploy" depends="build" >
		<echo message="Installing ${MBModule.name} on Ignition Gateway." />
		<postmodule posturl="${local.gateway.url}" modulefile="${build.dir}/modules/${MBModule.name}-module-unsigned.modl" />
	</target>	
</project>
