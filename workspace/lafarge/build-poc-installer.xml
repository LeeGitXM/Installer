<!-- Create an application installer for the LafargeHolcim
     "POC" package. This file assembles artifacts
     to create a specialized installer.
     
     We require that GIT_REPO and SVN_REPO be provided to this script.
-->
<project name="ApplicationInstaller" basedir="." default="build">
	<property name="build.date" value="May 30, 2016" />
	<property name="build.dir" value="${basedir}/../AI-build" />
	<property name="staging.dir" value="${basedir}/staging" />
	<property name="artifact.dir" value="${staging.dir}/artifacts" />
	<property name="deploy.dir" value="${basedir}/modules" />
	<property name="bom" value="${basedir}/bom.xml" />
	<property name="module.name" value="poc-installer-unsigned" />
	<property name="module.path" value="${basedir}/modules/poc-installer-unsigned.modl" />
	<property name="module.xml" value="${basedir}/poc-installer-module.xml" />
	<property name="local.gateway.url" value="http://localhost:8088/main/system/DeveloperModuleLoadingServlet" />
	<property name="version.build" value="1.2" />

	<!-- Add the postmodule task. This task can deploy a module to a local Ignition gateway. -->
	<taskdef name="postmodule" classname="com.inductiveautomation.ant.PostModule">
		<classpath location="${build.dir}/AntLib/ant-post-module.jar" />
	</taskdef>

	<!-- Clean results of previous runs -->
	<target name="clean" description="Remove existing archive">
		<delete dir="${staging.dir}" />
		<delete file="${module.path}" />
	</target>

	<!-- Builds the toolkit module jars and the final .modl file -->
	<target name="build" depends="clean" description="Assemble the installer">

		<echo message="Build date: ${build.date}" />
		<echo message="Build version: ${version.build}" />


		<!-- Create directories -->
		<echo message="Making ${module.name} modl" />
		<mkdir dir="${staging.dir}" />
		<mkdir dir="${artifact.dir}" />
		<mkdir dir="${deploy.dir}" />

		<!-- Create module.xml and  marker file -->
		<copy file="${module.xml}" tofile="${staging.dir}/module.xml" overwrite="true" />
		<echo message="${build.date}" file="${staging.dir}/.application-installer" append="false" />
		

		<!-- Copy Core jar files -->
		<copy file="${git.repo}/external/lib/ils-common.jar" todir="${staging.dir}/" />
		<copy file="${build.dir}/temp_modl/ai-gateway.jar" todir="${staging.dir}/" />

		<!-- Copy staged artifacts into the bundle. Update release and build date -->
		<mkdir dir="${artifact.dir}" />
		<copy file="${bom}" tofile="${artifact.dir}/bom.xml" overwrite="true" />
		<replace file="${artifact.dir}/bom.xml" token="@DATE@" value="${build.date}" />
		<replace file="${artifact.dir}/bom.xml" token="@RELEASE@" value="${version.build}" />

		<!-- Icons -->
		<mkdir dir="${artifact.dir}/icons" />
		<mkdir dir="${artifact.dir}/icons/poc" />
		<copy todir="${artifact.dir}/icons/poc">
			<fileset dir="${git.repo}/blt/images">
				<include name="**/*.png" />
			</fileset>
		</copy>
		<!-- Modules -->
		<mkdir dir="${artifact.dir}/modules" />
		<copy file="${git.repo}/blt/workspace/BLT_Build/modules/BLT-module-signed.modl" tofile="${artifact.dir}/modules/BLT-module-signed.modl" />

		<!-- Projects -->
		<mkdir dir="${artifact.dir}/projects" />
		<copy file="${git.repo}/lafarge/apc/ProofOfConcept/project/lafarge.proj" tofile="${artifact.dir}/projects/Lafarge.proj" />
		<copy file="${git.repo}/lafarge/apc/ProofOfConcept/project/global.proj" tofile="${artifact.dir}/projects/SFC.proj" />
		
		<!-- Tags -->
		<mkdir dir="${artifact.dir}/tags" />
		<copy file="${git.repo}/lafarge/apc/ProofOfConcept/config/udts.xml" tofile="${artifact.dir}/tags/UDTs.xml" />
		<copy file="${git.repo}/lafarge/apc/ProofOfConcept/config/sqltags.xml" tofile="${artifact.dir}/tags/sqlTags.xml" />
		
		<!-- Files -->
		<copy file="${git.repo}/lafarge/apc/ProofOfConcept/SimulationData/Test.csv" tofile="${artifact.dir}/file/datapump/Test.csv" />
		
		<!-- Zip it all up -->
		<zip zipfile="${module.path}" basedir="${staging.dir}" />
	</target>

	<!-- Installs the installer module - this is not part of the default target
	  1) In the local Ignition gateway. Note that the gateway must be running in developer mode for this to succeed. 
	  2) Onto the Google Drive
	 -->
	
	<target name="deploy" depends="build">
		<echo message="Installing ApplicationInstall module on Ignition Gateway and Google Drive." />
		<copy file="${module.path}" tofile="${google.repo}/0.1r17/${module.name}.modl" />
		<postmodule posturl="${local.gateway.url}" modulefile="${module.path}" />
	</target>

	<!-- macro to trim newlines from a variable -->
		 <macrodef name="trim">
		   <attribute name="input" />
		   <attribute name="property" />
		   <sequential>
		     <tempfile property="temp.file" />
		     <echo file="${temp.file}" message="@{input}" />
		     <move file="${temp.file}" tofile="${temp.file}.2">
		       <filterchain>
		       	   <filterreader classname="org.apache.tools.ant.filters.StripLineBreaks"/>
		       </filterchain>
		     </move>
		     <loadfile property="@{property}" srcFile="${temp.file}.2" />
		     <delete file="${temp.file}.2" failonerror="false" />
		   </sequential>
		 </macrodef>
</project>
